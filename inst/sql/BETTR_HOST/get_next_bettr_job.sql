WITH GET_TASKS_WITH_HB_DIFF AS (
  SELECT
    BT.*
    , round (
      extract ( day from SYSDATE - BT.LAST_HB_DT ) * 14400 +
      extract ( hour from SYSDATE - BT.LAST_HB_DT ) * 60  +
      extract ( minute from SYSDATE - BT.LAST_HB_DT )
    ) LAST_HB_MINS
  FROM
    V_BETTR_TASK BT
  WHERE
    BT.BETTR_TASK_GIT_PROJECT = &BETTR_TASK_GIT_PROJECT
    AND BT.BETTR_TASK_GIT_BRANCH = &BETTR_TASK_GIT_BRANCH
    AND (
     (
      &INCL_LIVE_REFRESH = 1
      AND BT.OPT_CACHE_EXPIRY_MINS > 0
    ) OR (
      &INCL_HISTORICAL_REFRESH = 1
      AND BT.OPT_CACHE_EXPIRY_MINS <= 0
    )
  )
)

, GET_JOBS_BY_TASK_FLAGS AS (
  SELECT
    GTWHD.BETTR_TASK_JOB_PRIORITY
    , GTWHD.BETTR_TASK_JOB_ID
    , SUM(
      CASE WHEN GTWHD.OPT_CACHE_EXPIRY_MINS > 0
        AND GTWHD.LAST_HB_MINS >= GTWHD.OPT_CACHE_EXPIRY_MINS
        THEN 1 END
      ) HAS_EXPIRED_CACHE_TASKS
    , SUM(
      CASE WHEN GTWHD.LAST_STATUS = 10 AND GTWHD.LAST_HB_MINS >= 5 THEN 1 END
      ) HAS_EXPIRED_IN_PROGRESS_TASKS
    , SUM(
      CASE WHEN GTWHD.LAST_HB_MINS <= 1 THEN 1 END
      ) HAS_IN_PROGRESS_TASKS
    , SUM(
      CASE WHEN GTWHD.LAST_STATUS IN (0, 20) THEN 1 END
      ) HAS_INACTIVE_INCOMPLETE_TASKS
  FROM
    GET_TASKS_WITH_HB_DIFF GTWHD
  GROUP BY
    GTWHD.BETTR_TASK_JOB_PRIORITY
    , GTWHD.BETTR_TASK_JOB_ID
)

, GET_NEXT_BETTER_TASK_JOB_ID AS (
  SELECT DISTINCT
    FIRST_VALUE(GJBTF.BETTR_TASK_JOB_ID) OVER (
      ORDER BY
        GJBTF.BETTR_TASK_JOB_PRIORITY
        , GJBTF.BETTR_TASK_JOB_ID
    ) NEXT_BETTER_TASK_JOB_ID
  FROM
    GET_JOBS_BY_TASK_FLAGS GJBTF
  WHERE
    (
      GJBTF.HAS_INACTIVE_INCOMPLETE_TASKS > 0
      OR GJBTF.HAS_EXPIRED_CACHE_TASKS > 0
    ) AND (
      GJBTF.HAS_IN_PROGRESS_TASKS IS NULL
      OR GJBTF.HAS_IN_PROGRESS_TASKS = 0
    )
)

SELECT
  BT.*
FROM
  GET_TASKS_WITH_HB_DIFF BT
  INNER JOIN GET_NEXT_BETTER_TASK_JOB_ID GNBTJI
    ON BT.BETTR_TASK_JOB_ID = GNBTJI.NEXT_BETTER_TASK_JOB_ID
ORDER BY
  BT.BETTR_TASK_JOB_PRIORITY
  , BT.BETTR_TASK_JOB_ID
  , BT.BETTR_TASK_SORT
--;