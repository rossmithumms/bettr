% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{get_rows}
\alias{get_rows}
\title{Get Rows from a Database}
\usage{
get_rows(binds = FALSE, connection_name, sql, suppress_bind_logging = FALSE)
}
\arguments{
\item{binds}{a data frame, data.table, or tibble with bind parameters.  Query will be called once for each row.}

\item{connection_name}{The snake_case name of the connection. This is used to retrieve the
environment variables to open the connection and locate the SQL query in the SQL_DIR directory.}

\item{sql}{Name of the SQL file to be used for the query.}

\item{suppress_bind_logging}{Optionally suppress the logging of bind parameters (defaults to false).}
}
\value{
A tibble of the result set with cleaned column names.
}
\description{
This function allows for parameterized, batch SELECT queries to an Oracle connection.
The SQL statement must be stored in a file located in the following path location:
<SQL_DIR>/<CONNECTION_NAME>/\if{html}{\out{<SQL>}}.sql
}
\details{
The query will be called for each row in the args object (a data frame, data.table,
or tibble).  The SQL file may expose bind parameters that will be used through the
DBI bind API.  The named bind parameters must be unique, begin with a question mark,
and be formatted in snake_case.

The SQL_DIR must be provided as an absolute path in an environment variable.

By requiring the SQL to be stored outside this file it can be versioned, tested, and
audited separately from the R script calling this function.
}
