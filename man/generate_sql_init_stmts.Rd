% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{generate_sql_init_stmts}
\alias{generate_sql_init_stmts}
\title{Generate ETL Initialization SQL}
\usage{
generate_sql_init_stmts(
  rows,
  table_name,
  connection_name,
  index_id_columns = TRUE,
  index_columns = c(),
  view_grants = c()
)
}
\arguments{
\item{rows}{Rows of data from an extract that are representative of the data
to be stored in the new table and presented in a new view.}

\item{table_name}{The name of the table.}

\item{connection_name}{The name of the database connection (schema user).}

\item{index_id_columns}{If TRUE, columns that end in \verb{_id} will automatically
have indexes created on them.  Defaults to TRUE.}

\item{index_columns}{A vector of column names to be indexed.  If parameter
\code{index_id_columns} = TRUE, this will supplement those columns.}

\item{view_grants}{The names of database roles to grant SELECT permissions.
Defaults to none.}
}
\value{
String containing the generated SQL statements,
delimited by \verb{;;;}.
}
\description{
This method helps \code{bettr::generate_init_sql} by generating the
\verb{ALTER TABLE}, \verb{CREATE VIEW} and \code{GRANT} statements associated
with the provided input.
Handling this process in a separate function allows the caller
to create variants of the requested table, such as archives.
}
