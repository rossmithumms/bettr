% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{generate_init_sql}
\alias{generate_init_sql}
\title{Generate and Save ETL Table Initialization SQL}
\usage{
generate_init_sql(
  rows,
  table_name,
  connection_name,
  index_id_columns = TRUE,
  index_columns = c(),
  view_grants = c()
)
}
\arguments{
\item{rows}{Rows of data from an extract that are representative of the data
to be stored in the new table and presented in a new view.}

\item{table_name}{The name of the table.}

\item{connection_name}{The name of the database connection (schema user).}

\item{index_id_columns}{If TRUE, columns that end in \verb{_id} will automatically
have indexes created on them.  Defaults to TRUE.}

\item{index_columns}{A vector of column names to be indexed.  If parameter
\code{index_id_columns} = TRUE, this will supplement those columns.}

\item{view_grants}{The names of database roles to grant SELECT permissions.
Defaults to none.}
}
\value{
Nothing.  This function is called for its side effect of writing an
initialization SQL file to the hard disk under the path given at the SQL_DIR
environment variable.  Defaults to none.
}
\description{
This is sugar to simplify the process of creating initialization SQL files.
It depends on the environmental variable SQL_DIR to be set.
This function will attempt to generate a SQL file that adds columns, indexes,
views, and grants.
Note that this is a CLI utility function in the R command console, not meant
to be run outside of a developer's console.  No calling this in task R files.
Naturally, once the init SQL has been created and tested, it should be
added to your project's version control.
}
